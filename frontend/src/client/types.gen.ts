// This file is auto-generated by @hey-api/openapi-ts

export type Body_auth_login_access_token = {
    grant_type?: (string | null);
    username: string;
    password: string;
    scope?: string;
    client_id?: (string | null);
    client_secret?: (string | null);
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type ItemCreate = {
    title: string;
    description?: (string | null);
};

export type ItemPublic = {
    title: string;
    description?: (string | null);
    id: string;
    owner_id: string;
};

export type ItemsPublic = {
    data: Array<ItemPublic>;
    count: number;
};

export type ItemsTrashPublic = {
    data: Array<ItemTrashPublic>;
    count: number;
};

export type ItemTrashPublic = {
    title: string;
    description?: (string | null);
    id: string;
    owner_id: string;
    deleted_at: string;
    deleted_by?: (string | null);
    delete_reason?: (string | null);
    expires_at?: (string | null);
};

export type ItemUpdate = {
    title?: (string | null);
    description?: (string | null);
};

export type Message = {
    message: string;
};

export type NewPassword = {
    token: string;
    new_password: string;
};

export type PhoneLoginRequest = {
    phone_number: string;
    code: string;
};

export type PhoneNumberRequest = {
    phone_number: string;
};

export type PrivateUserCreate = {
    email: string;
    password: string;
    full_name: string;
    is_verified?: boolean;
};

export type Token = {
    access_token: string;
    token_type?: string;
};

export type UpdatePassword = {
    current_password: string;
    new_password: string;
};

export type UserCreate = {
    email: string;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    phone_number?: (string | null);
    password: string;
};

export type UserPublic = {
    email: string;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    phone_number?: (string | null);
    id: string;
};

export type UserRegister = {
    email: string;
    password: string;
    full_name?: (string | null);
};

export type UsersPublic = {
    data: Array<UserPublic>;
    count: number;
};

export type UserUpdate = {
    email?: (string | null);
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    phone_number?: (string | null);
    password?: (string | null);
};

export type UserUpdateMe = {
    full_name?: (string | null);
    email?: (string | null);
    phone_number?: (string | null);
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type AuthLoginAccessTokenData = {
    formData: Body_auth_login_access_token;
};

export type AuthLoginAccessTokenResponse = (Token);

export type AuthTestTokenResponse = (UserPublic);

export type AuthRecoverPasswordData = {
    email: string;
};

export type AuthRecoverPasswordResponse = (Message);

export type AuthResetPasswordData = {
    requestBody: NewPassword;
};

export type AuthResetPasswordResponse = (Message);

export type AuthRecoverPasswordHtmlContentData = {
    email: string;
};

export type AuthRecoverPasswordHtmlContentResponse = (string);

export type AuthRevokeCurrentTokenResponse = (Message);

export type AuthRevokeByJtiData = {
    jti: string;
    ttlSeconds?: (number | null);
};

export type AuthRevokeByJtiResponse = (Message);

export type AuthJtiStatusMeResponse = ({
    [key: string]: unknown;
});

export type AuthJtiStatusData = {
    jti: string;
};

export type AuthJtiStatusResponse = ({
    [key: string]: unknown;
});

export type AuthRefreshTokenResponse = (Token);

export type AuthLogoutResponse = (Message);

export type AuthSendPhoneCodeData = {
    requestBody: PhoneNumberRequest;
};

export type AuthSendPhoneCodeResponse = (Message);

export type AuthPhoneLoginData = {
    requestBody: PhoneLoginRequest;
};

export type AuthPhoneLoginResponse = (Token);

export type AuthWechatAuthorizeResponse = (unknown);

export type AuthWechatCallbackData = {
    code: string;
    state: string;
};

export type AuthWechatCallbackResponse = (unknown);

export type ItemsCreateItemData = {
    requestBody: ItemCreate;
};

export type ItemsCreateItemResponse = (ItemPublic);

export type ItemsReadItemsData = {
    limit?: number;
    skip?: number;
};

export type ItemsReadItemsResponse = (ItemsPublic);

export type ItemsReadTrashItemsData = {
    limit?: number;
    skip?: number;
};

export type ItemsReadTrashItemsResponse = (ItemsTrashPublic);

export type ItemsReadItemData = {
    id: string;
};

export type ItemsReadItemResponse = (ItemPublic);

export type ItemsDeleteItemData = {
    id: string;
};

export type ItemsDeleteItemResponse = (Message);

export type ItemsUpdateItemData = {
    id: string;
    requestBody: ItemUpdate;
};

export type ItemsUpdateItemResponse = (ItemPublic);

export type ItemsRestoreItemData = {
    id: string;
};

export type ItemsRestoreItemResponse = (ItemPublic);

export type ItemsPurgeItemData = {
    id: string;
};

export type ItemsPurgeItemResponse = (Message);

export type PrivateCreateUserData = {
    requestBody: PrivateUserCreate;
};

export type PrivateCreateUserResponse = (UserPublic);

export type UsersReadUsersData = {
    limit?: number;
    skip?: number;
};

export type UsersReadUsersResponse = (UsersPublic);

export type UsersCreateUserData = {
    requestBody: UserCreate;
};

export type UsersCreateUserResponse = (UserPublic);

export type UsersReadUserMeResponse = (UserPublic);

export type UsersDeleteUserMeResponse = (Message);

export type UsersUpdateUserMeData = {
    requestBody: UserUpdateMe;
};

export type UsersUpdateUserMeResponse = (UserPublic);

export type UsersUpdatePasswordMeData = {
    requestBody: UpdatePassword;
};

export type UsersUpdatePasswordMeResponse = (Message);

export type UsersRegisterUserData = {
    requestBody: UserRegister;
};

export type UsersRegisterUserResponse = (UserPublic);

export type UsersReadUserByIdData = {
    userId: string;
};

export type UsersReadUserByIdResponse = (UserPublic);

export type UsersUpdateUserData = {
    requestBody: UserUpdate;
    userId: string;
};

export type UsersUpdateUserResponse = (UserPublic);

export type UsersDeleteUserData = {
    userId: string;
};

export type UsersDeleteUserResponse = (Message);

export type UtilsTestEmailData = {
    emailTo: string;
};

export type UtilsTestEmailResponse = (Message);

export type UtilsHealthCheckResponse = (boolean);